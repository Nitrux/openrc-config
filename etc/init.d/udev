#!/sbin/openrc-run
# Copyright (c) 2007-2021 The Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

description="Manages device nodes and dynamic kernel events"
command="/lib/systemd/systemd-udevd"
command_args="${udev_opts}"
pidfile="/run/udev.pid"

depend() {
	# udev needs the /dev, /proc, and /sys filesystems to be mounted
	need dev procfs sysfs
}

# Function to check prerequisites before starting
_check_prereqs() {
	if [ ! -d /sys/class/ ]; then
		eerror "udev requires a mounted sysfs, not starting."
		return 1
	fi
	if [ ! -w /sys ]; then
		ewarn "udev does not support read-only /sys (e.g., in containers), not starting."
		return 1
	fi
	if [ "$(stat -c %d/%i /)" != "$(stat -Lc %d/%i /proc/1/root 2>/dev/null)" ]; then
		ewarn "A chroot environment has been detected, udev not started."
		return 1
	fi
	return 0
}

start_pre() {
	_check_prereqs || return 1

	# Clear kernel's uevent helper
	if [ -w /sys/kernel/uevent_helper ]; then
		echo > /sys/kernel/uevent_helper
	fi

	# Clean up database from a possible initramfs udev run
	udevadm info --cleanup-db >/dev/null 2>&1
}

start() {
	ebegin "Starting udev daemon"
	start-stop-daemon --start --pidfile "${pidfile}" \
		--exec "${command}" -- ${command_args}
	eend $? || return 1

	ebegin "Triggering udev events"
	udevadm trigger --type=subsystems --action=add
	udevadm trigger --type=devices --action=add
	eend $?

	ebegin "Waiting for udev to settle"
	if udevadm settle ${udev_settle_opts}; then
		eend 0
	else
		eend 1 "udevadm settle timed out"
	fi
}

stop() {
	ebegin "Stopping udev daemon"
	start-stop-daemon --stop --pidfile "${pidfile}" --quiet
	eend $?
}

reload() {
	ebegin "Reloading udev rules"
	udevadm control --reload-rules
	eend $?
}
