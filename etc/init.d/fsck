#!/sbin/openrc-run

description="Check all non-root filesystems for errors"
FSCK_LOGFILE="/var/log/fsck/checkfs"

depend() {
	need root
	before localmount
}

_handle_failed_fsck() {
	eerror "File system check failed."
	eerror "A log is being saved in ${FSCK_LOGFILE} if that location is writable."
	ewarn "A maintenance shell will now be started."
	ewarn "Press Control-D to terminate this shell and resume system boot."

	if ! sulogin "$(get_boot_tty)"; then
		eerror "Attempt to start maintenance shell failed."
		eerror "Continuing with system boot in 5 seconds."
		sleep 5
	fi
}

start() {
	if yesno "${rc_fast_boot}"; then
		ewarn "Fast boot enabled, skipping file system check."
		return 0
	fi

	ebegin "Checking non-root file systems"

	local force_flag=""
	if [ -f /forcefsck ] || yesno "${rc_force_fsck}"; then
		force_flag="-f"
	fi

	local fix_flag="-a"
	if yesno "${rc_fsck_fix}"; then
		fix_flag="-y"
	fi

	local fsck_opts="-T -M -A"
	local fscktypes_opt=""
	[ -n "${rc_fsck_types}" ] && fscktypes_opt="-t ${rc_fsck_types}"

	mkdir -p "$(dirname "${FSCK_LOGFILE}")"

	fsck ${fsck_opts} ${fix_flag} ${force_flag} ${fscktypes_opt} >"${FSCK_LOGFILE}" 2>&1
	local FSCKCODE=$?

	rm -f /fastboot /forcefsck 2>/dev/null

	if [ "${FSCKCODE}" -ge 32 ]; then
		ewarn "File system check was interrupted by user (code ${FSCKCODE})"
		eend 1
	elif [ "${FSCKCODE}" -gt 1 ]; then
		eend 1 "Uncorrected errors found (code ${FSCKCODE})"
		_handle_failed_fsck
	else
		eend 0
	fi
}
